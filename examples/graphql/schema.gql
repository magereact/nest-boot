# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""
Returns information about pagination in a connection, in accordance with the [Relay specification](https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo).
"""
type PageInfo {
  """Whether there are more pages to fetch following the current page."""
  hasNextPage: Boolean!

  """Whether there are any pages prior to the current page."""
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Post {
  id: ID!
  title: String!
  content: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  publishedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
An auto-generated type which holds one Post and a cursor during pagination.
"""
type PostEdge {
  """The item at the end of PostEdge."""
  node: Post!

  """A cursor for use in pagination."""
  cursor: String!
}

type PostConnection {
  """A list of edges."""
  edges: [PostEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

type Query {
  post(id: ID!): Post!
  posts(
    """
    Apply one or multiple filters to the query.
    Supported filter parameters:
    `id`, `title`, `content`, `user_id`, `published`
    """
    query: String

    """Returns up to the first `n` elements from the list."""
    first: Int

    """Returns up to the last `n` elements from the list."""
    last: Int

    """Returns the elements that come after the specified cursor."""
    after: String

    """Returns the elements that come before the specified cursor."""
    before: String

    """Ordering options for the returned topics."""
    orderBy: PostOrder
  ): PostConnection!
}

"""Ordering options for post connections"""
input PostOrder {
  """The field to order posts by."""
  field: PostOrderField!

  """The ordering direction."""
  direction: OrderDirection!
}

"""Properties by which post connections can be ordered."""
enum PostOrderField {
  ID
  CREATED_AT
}

enum OrderDirection {
  ASC
  DESC
}